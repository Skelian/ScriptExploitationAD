<#
.SYNOPSIS
Créer des utilisateurs Active Directory à partir d'un fichier CSV et configurer une adresse e-mail si demandé.

.DESCRIPTION
Ce script lit un fichier CSV, crée des utilisateurs AD en fonction des informations fournies, copie les groupes d'un utilisateur modèle vers les nouveaux utilisateurs, et configure une boîte aux lettres pour les utilisateurs ayant `CreateEmail` défini sur "Oui".
Le CSV doit avoir les colonnes suivantes : NOM, Prenom, Title, Compagny, Departement, EmployeeID, CreateEmail

.PARAMETER CsvPath
Le chemin vers le fichier CSV contenant les informations des utilisateurs à créer.

.PARAMETER Password
Le mot de passe par défaut pour les nouveaux utilisateurs.

.PARAMETER OU
L'unité organisationnelle où les utilisateurs seront créés.

.PARAMETER HomeDrive
Le lecteur réseau associé au répertoire personnel des utilisateurs.

.PARAMETER DomaineMicrosoft
Le domaine Microsoft utilisé pour la boîte aux lettres distante.

.EXAMPLE
.\CreateADUsersFromCSV.ps1 -CsvPath "C:\Users\admin\Documents\users.csv"
#>

Param (
    [Parameter(Mandatory = $true)]
    [string]$CsvPath,

    [Parameter(Mandatory = $false)]
    [string]$Domaine = "@domaine.local",

    [Parameter(Mandatory = $false)]
    [string]$DomaineMicrosoft = "domaine.onmicrosoft.com", # Domaine Microsoft pour la boîte aux lettres

    [Parameter(Mandatory = $false)]
    [string]$OU = "OU=Users,DC=domaine,DC=local",

    [Parameter(Mandatory = $false)]
    [string]$Password = "p@ssw0rd*",

    [Parameter(Mandatory = $false)]
    [string]$HomeDrive = "H:",

    [Parameter(Mandatory = $false)]
    [string]$exportPath = "C:\scripts\createUser",

    [Parameter(Mandatory = $false)]
    [string]$exportFile = "created_users.csv"
)

# Importer le module Active Directory
Import-Module ActiveDirectory

# Vérifier si le fichier CSV existe
if (-not (Test-Path $CsvPath)) {
    Write-Host "Le fichier CSV spécifié n'existe pas : $CsvPath" -ForegroundColor Red
    exit
}

# Lire le fichier CSV
$users = Import-Csv -Path $CsvPath -Delimiter ";"

# Créer une liste pour stocker les informations des utilisateurs créés
$createdUsers = @()

# Créée une session avec l'exchange local pour la creation de mail
$ExchangeUri = "http://srvExchange/PowerShell/"
   
$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri $ExchangeUri -Authentication Kerberos -Credential (Get-Credential)
Import-PSSession $Session -DisableNameChecking


# Parcourir chaque utilisateur dans le fichier CSV
foreach ($user in $users) {
    $Nom = $user.NOM
    $Prenom = $user.Prenom
    $Title = $user.Title
    $Company = $user.Compagny
    $Department = $user.Departement
    $ModelUser = $user."Utilisateur Modele"  # Utilisateur modèle pour copier les groupes
    $EmployeeID = $user.EmployeeID
    $CreateEmail = $user.CreateEmail

    # Calculer l'UPN, HomeDirectory et SamAccountName
    $prenomNom = ("$Prenom.$Nom").ToLower()
    $SAM = "$prenomNom".Substring(0, [math]::Min(20, ("$prenomNom").Length))
    $UPN = "$prenomNom$domaine"
    $HomeDirectory = "\\fileSrv\home\$prenomNom"

    # Vérifier si l'utilisateur existe déjà dans l'AD
    $existingUser = Get-ADUser -Filter {UserPrincipalName -eq $UPN} -ErrorAction SilentlyContinue

    if ($existingUser) {
        Write-Host "L'utilisateur '$UPN' existe déjà dans Active Directory." -ForegroundColor Yellow
        continue
    }

    # Créer l'utilisateur AD
    try {
        New-ADUser `
            -UserPrincipalName $UPN `
            -SamAccountName $SAM `
            -Name "$Nom $Prenom" `
            -GivenName $Prenom `
            -DisplayName "$Nom $Prenom" `
            -Surname $Nom `
            -Path $OU `
            -HomeDirectory $HomeDirectory `
            -HomeDrive $HomeDrive `
            -Title $Title `
            -Company $Company `
            -Department $Department `
            -EmployeeID $EmployeeID `
            -OtherAttributes @{
                'extensionAttribute15'="Exemple"
            } `
            -ChangePasswordAtLogon $true `
            -AccountPassword (ConvertTo-SecureString $Password -AsPlainText -Force) `
            -Enabled $true

        # Ajouter au groupe GPR-m365-F1 si besoin de créer l'email
        #Groupe Synchro sur o365 avec une licence attribuée
        if ($CreateEmail -eq "Oui") {
            Add-ADGroupMember -Identity "GPR-m365-F1" -Members $SAM
            # Activer la boîte aux lettres
            enable-remotemailbox -Identity "$SAM" -Remoteroutingaddress "$SAM@$DomaineMicrosoft"
        }

        # Ajouter les informations de l'utilisateur créé à la liste
        $createdUsers += [PSCustomObject]@{
            UPN             = $UPN
            SAM             = $SAM
            password        = $Password
            Name            = "$Nom $Prenom"
            Title           = $Title
            Company         = $Company
            Department      = $Department
            EmployeeID      = $EmployeeID
            GroupsCopied    = if ($copySuccess) { "Oui" } else { "Non" }
            EmailCreated    = if ($CreateEmail -eq "Oui") { "Oui" } else { "Non" }
        }

        Write-Host "Utilisateur $UPN créé avec succès." -ForegroundColor Green

    } catch {
        Write-Host "Erreur lors de la création de l'utilisateur $UPN : $_" -ForegroundColor Red
    }
}

#close connexion 
$Session | Remove-PSSession

# Exporter les informations des utilisateurs créés vers un fichier CSV
$dateJour = Get-Date -Format "yyyyMMdd"
$filePath = "$exportPath\$exportFile"

try {
    $createdUsers | Export-Csv -Path $filePath -NoTypeInformation -Delimiter ";" -Append
    Write-Host "Les informations des utilisateurs créés ont été exportées vers $filePath" -ForegroundColor Cyan
} catch {
    # si deja ouvert, faire l'export dans un fichier suffixer avec la date du jour
    $filePathSec = "$exportPath\$exportFile$dateJour.csv"
    $createdUsers | Export-Csv -Path $filePathSec -NoTypeInformation -Delimiter ";" -Append
    Write-Host "Les informations des utilisateurs créés ont été exportées vers $filePathSec" -ForegroundColor Cyan
}
